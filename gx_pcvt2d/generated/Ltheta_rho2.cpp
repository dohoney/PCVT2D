#include "Ltheta_rho2.h"
namespace Geex {
   Ltheta_rho2::Ltheta_rho2() : Function(1,8,0){}
   void Ltheta_rho2::eval(bool do_f, bool do_g, bool do_H) {
      if(do_f) {
{
double tmp_1 = x(5);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 = tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = (tmp_5*tmp_5)+1.0;
double tmp_7 = 1.0/(tmp_6);
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_4*tmp_7*tmp_9;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(4);
double tmp_13 = x(0);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_14+tmp_12;
double tmp_16 = tmp_11*tmp_7*tmp_15;
double tmp_17 = tmp_10+tmp_16;
double tmp_18 = x(2);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_13+tmp_19;
double tmp_21 = tmp_11*tmp_20*tmp_7;
double tmp_22 = x(3);
double tmp_23 = tmp_3+tmp_22;
double tmp_24 = -tmp_23*tmp_7*tmp_9;
double tmp_25 = tmp_21+tmp_24;
double tmp_28 = tmp_11*tmp_4*tmp_7;
double tmp_29 = -tmp_7*tmp_9*tmp_15;
double tmp_30 = tmp_28+tmp_29;
double tmp_32 = tmp_20*tmp_7*tmp_9;
double tmp_33 = tmp_11*tmp_23*tmp_7;
double tmp_34 = tmp_33+tmp_32;
double f0 = -((tmp_30*tmp_30)+tmp_34*tmp_30+(tmp_25*tmp_25)-tmp_17*tmp_25+(tmp_17*tmp_17)+(tmp_34*tmp_34))*(tmp_34*tmp_17+tmp_30*tmp_25);
f(0) = f0;
}
      }
      if(do_g) {
{
double tmp_1 = x(5);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 = tmp_1+tmp_3;
double tmp_5 = x(6);
double tmp_6 = sin(tmp_5);
double tmp_7 = x(7);
double tmp_8 = (tmp_7*tmp_7)+1.0;
double tmp_9 = 1.0/(tmp_8);
double tmp_10 = tmp_4*tmp_6*tmp_9;
double tmp_11 = x(4);
double tmp_12 = x(0);
double tmp_13 = -tmp_12;
double tmp_14 = tmp_11+tmp_13;
double tmp_15 = cos(tmp_5);
double tmp_16 = -tmp_14*tmp_15*tmp_9;
double tmp_17 = tmp_16+tmp_10;
double tmp_18 = x(2);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_19+tmp_12;
double tmp_21 = tmp_6*tmp_9*tmp_20;
double tmp_22 = x(3);
double tmp_23 = tmp_22+tmp_3;
double tmp_24 = -tmp_15*tmp_9*tmp_23;
double tmp_25 = tmp_21+tmp_24;
double tmp_27 = tmp_4*tmp_15*tmp_9;
double tmp_28 = tmp_14*tmp_6*tmp_9;
double tmp_29 = tmp_28+tmp_27;
double tmp_30 = tmp_15*tmp_9*tmp_20;
double tmp_31 = tmp_6*tmp_9*tmp_23;
double tmp_32 = tmp_31+tmp_30;
double g0_0 = ((tmp_17*tmp_17)+(tmp_25*tmp_25)-tmp_29*tmp_25+(tmp_32*tmp_32)+(tmp_29*tmp_29)+tmp_32*tmp_17)*(tmp_32*tmp_6*tmp_9-tmp_25*tmp_15*tmp_9-tmp_6*tmp_9*tmp_17-tmp_29*tmp_15*tmp_9)+3.0*(tmp_25*tmp_17+tmp_29*tmp_32)*(tmp_29*tmp_6*tmp_9-tmp_15*tmp_9*tmp_17-tmp_25*tmp_6*tmp_9-tmp_32*tmp_15*tmp_9);
g(0,0) = g0_0;
}
{
double tmp_1 = x(5);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 = tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = (tmp_5*tmp_5)+1.0;
double tmp_7 = 1.0/(tmp_6);
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_4*tmp_7*tmp_9;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(4);
double tmp_13 = x(0);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_14+tmp_12;
double tmp_16 = tmp_7*tmp_15*tmp_11;
double tmp_17 = tmp_10+tmp_16;
double tmp_18 = x(2);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_13+tmp_19;
double tmp_21 = tmp_20*tmp_7*tmp_11;
double tmp_22 = x(3);
double tmp_23 = tmp_3+tmp_22;
double tmp_24 = -tmp_23*tmp_7*tmp_9;
double tmp_25 = tmp_21+tmp_24;
double tmp_28 = tmp_4*tmp_7*tmp_11;
double tmp_29 = -tmp_7*tmp_9*tmp_15;
double tmp_30 = tmp_29+tmp_28;
double tmp_32 = tmp_20*tmp_7*tmp_9;
double tmp_33 = tmp_23*tmp_7*tmp_11;
double tmp_34 = tmp_32+tmp_33;
double g0_1 = (tmp_17*tmp_7*tmp_11+tmp_7*tmp_34*tmp_9+tmp_7*tmp_25*tmp_11-tmp_7*tmp_9*tmp_30)*(tmp_34*tmp_30-tmp_17*tmp_25+(tmp_34*tmp_34)+(tmp_25*tmp_25)+(tmp_30*tmp_30)+(tmp_17*tmp_17))+3.0*(tmp_7*tmp_34*tmp_11-tmp_7*tmp_25*tmp_9+tmp_7*tmp_30*tmp_11+tmp_17*tmp_7*tmp_9)*(tmp_17*tmp_34+tmp_25*tmp_30);
g(0,1) = g0_1;
}
{
double tmp_1 = x(5);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 = tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = (tmp_5*tmp_5)+1.0;
double tmp_7 = 1.0/(tmp_6);
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_4*tmp_7*tmp_9;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(4);
double tmp_13 = x(0);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_12+tmp_14;
double tmp_16 = tmp_7*tmp_15*tmp_11;
double tmp_17 = tmp_10+tmp_16;
double tmp_18 = x(2);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_13+tmp_19;
double tmp_21 = tmp_20*tmp_7*tmp_11;
double tmp_22 = x(3);
double tmp_23 = tmp_3+tmp_22;
double tmp_24 = -tmp_23*tmp_7*tmp_9;
double tmp_25 = tmp_21+tmp_24;
double tmp_28 = tmp_4*tmp_7*tmp_11;
double tmp_29 = -tmp_7*tmp_9*tmp_15;
double tmp_30 = tmp_29+tmp_28;
double tmp_32 = tmp_20*tmp_7*tmp_9;
double tmp_33 = tmp_23*tmp_7*tmp_11;
double tmp_34 = tmp_32+tmp_33;
double g0_2 = (tmp_25*tmp_30+tmp_17*tmp_34)*(2.0*tmp_7*tmp_25*tmp_11+2.0*tmp_7*tmp_9*tmp_34-tmp_17*tmp_7*tmp_11+tmp_7*tmp_9*tmp_30)+((tmp_30*tmp_30)+(tmp_25*tmp_25)-tmp_17*tmp_25+(tmp_34*tmp_34)+(tmp_17*tmp_17)+tmp_34*tmp_30)*(tmp_7*tmp_11*tmp_30+tmp_17*tmp_7*tmp_9);
g(0,2) = g0_2;
}
{
double tmp_1 = x(5);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 = tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = (tmp_5*tmp_5)+1.0;
double tmp_7 = 1.0/(tmp_6);
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_4*tmp_7*tmp_9;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(4);
double tmp_13 = x(0);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_12+tmp_14;
double tmp_16 = tmp_15*tmp_11*tmp_7;
double tmp_17 = tmp_10+tmp_16;
double tmp_18 = x(2);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_19+tmp_13;
double tmp_21 = tmp_11*tmp_7*tmp_20;
double tmp_22 = x(3);
double tmp_23 = tmp_22+tmp_3;
double tmp_24 = -tmp_7*tmp_23*tmp_9;
double tmp_25 = tmp_21+tmp_24;
double tmp_28 = tmp_11*tmp_4*tmp_7;
double tmp_29 = -tmp_15*tmp_7*tmp_9;
double tmp_30 = tmp_28+tmp_29;
double tmp_32 = tmp_7*tmp_20*tmp_9;
double tmp_33 = tmp_11*tmp_7*tmp_23;
double tmp_34 = tmp_33+tmp_32;
double g0_3 = -(2.0*tmp_34*tmp_11*tmp_7+tmp_7*tmp_17*tmp_9-2.0*tmp_25*tmp_7*tmp_9+tmp_11*tmp_7*tmp_30)*(tmp_25*tmp_30+tmp_34*tmp_17)+(tmp_7*tmp_30*tmp_9-tmp_11*tmp_7*tmp_17)*((tmp_34*tmp_34)-tmp_25*tmp_17+(tmp_17*tmp_17)+(tmp_25*tmp_25)+tmp_34*tmp_30+(tmp_30*tmp_30));
g(0,3) = g0_3;
}
{
double tmp_1 = x(5);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 = tmp_1+tmp_3;
double tmp_5 = x(6);
double tmp_6 = sin(tmp_5);
double tmp_7 = x(7);
double tmp_8 = (tmp_7*tmp_7)+1.0;
double tmp_9 = 1.0/(tmp_8);
double tmp_10 = tmp_4*tmp_6*tmp_9;
double tmp_11 = x(4);
double tmp_12 = x(0);
double tmp_13 = -tmp_12;
double tmp_14 = tmp_13+tmp_11;
double tmp_15 = cos(tmp_5);
double tmp_16 = -tmp_9*tmp_15*tmp_14;
double tmp_17 = tmp_10+tmp_16;
double tmp_18 = x(2);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_19+tmp_12;
double tmp_21 = tmp_20*tmp_6*tmp_9;
double tmp_22 = x(3);
double tmp_23 = tmp_3+tmp_22;
double tmp_24 = -tmp_23*tmp_9*tmp_15;
double tmp_25 = tmp_21+tmp_24;
double tmp_27 = tmp_4*tmp_9*tmp_15;
double tmp_28 = tmp_6*tmp_9*tmp_14;
double tmp_29 = tmp_27+tmp_28;
double tmp_30 = tmp_20*tmp_9*tmp_15;
double tmp_31 = tmp_23*tmp_6*tmp_9;
double tmp_32 = tmp_30+tmp_31;
double g0_4 = ((tmp_29*tmp_29)-tmp_29*tmp_25+tmp_17*tmp_32+(tmp_17*tmp_17)+(tmp_32*tmp_32)+(tmp_25*tmp_25))*(tmp_25*tmp_9*tmp_15-tmp_6*tmp_32*tmp_9)+(2.0*tmp_17*tmp_9*tmp_15-2.0*tmp_29*tmp_6*tmp_9+tmp_32*tmp_9*tmp_15+tmp_6*tmp_25*tmp_9)*(tmp_29*tmp_32+tmp_17*tmp_25);
g(0,4) = g0_4;
}
{
double tmp_1 = x(5);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 = tmp_3+tmp_1;
double tmp_5 = x(6);
double tmp_6 = sin(tmp_5);
double tmp_7 = x(7);
double tmp_8 = (tmp_7*tmp_7)+1.0;
double tmp_9 = 1.0/(tmp_8);
double tmp_10 = tmp_9*tmp_6*tmp_4;
double tmp_11 = x(4);
double tmp_12 = x(0);
double tmp_13 = -tmp_12;
double tmp_14 = tmp_11+tmp_13;
double tmp_15 = cos(tmp_5);
double tmp_16 = -tmp_9*tmp_15*tmp_14;
double tmp_17 = tmp_10+tmp_16;
double tmp_18 = x(2);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_12+tmp_19;
double tmp_21 = tmp_9*tmp_6*tmp_20;
double tmp_22 = x(3);
double tmp_23 = tmp_3+tmp_22;
double tmp_24 = -tmp_9*tmp_15*tmp_23;
double tmp_25 = tmp_21+tmp_24;
double tmp_27 = tmp_9*tmp_15*tmp_4;
double tmp_28 = tmp_9*tmp_6*tmp_14;
double tmp_29 = tmp_28+tmp_27;
double tmp_30 = tmp_9*tmp_15*tmp_20;
double tmp_31 = tmp_9*tmp_6*tmp_23;
double tmp_32 = tmp_31+tmp_30;
double g0_5 = -(2.0*tmp_9*tmp_15*tmp_29+tmp_9*tmp_6*tmp_32+2.0*tmp_9*tmp_6*tmp_17-tmp_9*tmp_15*tmp_25)*(tmp_29*tmp_32+tmp_17*tmp_25)-(tmp_9*tmp_15*tmp_32+tmp_9*tmp_6*tmp_25)*(tmp_17*tmp_32+(tmp_17*tmp_17)+(tmp_25*tmp_25)-tmp_29*tmp_25+(tmp_32*tmp_32)+(tmp_29*tmp_29));
g(0,5) = g0_5;
}
{
double g0_6 = 0.0;
g(0,6) = g0_6;
}
{
double tmp_1 = x(5);
double tmp_2 = x(1);
double tmp_3 = -tmp_2;
double tmp_4 = tmp_1+tmp_3;
double tmp_5 = x(7);
double tmp_6 = (tmp_5*tmp_5)+1.0;
double tmp_7 = 1.0/(tmp_6);
double tmp_8 = (tmp_7*tmp_7);
double tmp_9 = x(6);
double tmp_10 = cos(tmp_9);
double tmp_11 = tmp_5*tmp_8*tmp_4*tmp_10;
double tmp_12 = sin(tmp_9);
double tmp_13 = x(4);
double tmp_14 = x(0);
double tmp_15 = -tmp_14;
double tmp_16 = tmp_13+tmp_15;
double tmp_17 = tmp_5*tmp_8*tmp_16*tmp_12;
double tmp_18 = tmp_11+tmp_17;
double tmp_19 = x(2);
double tmp_20 = -tmp_19;
double tmp_21 = tmp_20+tmp_14;
double tmp_22 = tmp_7*tmp_21*tmp_12;
double tmp_23 = x(3);
double tmp_24 = tmp_23+tmp_3;
double tmp_25 = -tmp_7*tmp_10*tmp_24;
double tmp_26 = tmp_22+tmp_25;
double tmp_28 = tmp_4*tmp_7*tmp_12;
double tmp_29 = -tmp_7*tmp_10*tmp_16;
double tmp_30 = tmp_29+tmp_28;
double tmp_31 = tmp_5*tmp_8*tmp_12*tmp_24;
double tmp_32 = tmp_5*tmp_8*tmp_10*tmp_21;
double tmp_33 = tmp_32+tmp_31;
double tmp_35 = tmp_5*tmp_8*tmp_10*tmp_24;
double tmp_36 = -tmp_5*tmp_8*tmp_21*tmp_12;
double tmp_37 = tmp_36+tmp_35;
double tmp_38 = tmp_4*tmp_7*tmp_10;
double tmp_39 = tmp_7*tmp_16*tmp_12;
double tmp_40 = tmp_39+tmp_38;
double tmp_43 = tmp_5*tmp_8*tmp_4*tmp_12;
double tmp_44 = -tmp_5*tmp_8*tmp_10*tmp_16;
double tmp_45 = tmp_44+tmp_43;
double tmp_48 = tmp_7*tmp_10*tmp_21;
double tmp_49 = tmp_7*tmp_12*tmp_24;
double tmp_50 = tmp_48+tmp_49;
double g0_7 = -2.0*(tmp_26*tmp_30+tmp_50*tmp_40)*(2.0*tmp_26*tmp_37-tmp_45*tmp_50-tmp_33*tmp_30-2.0*tmp_40*tmp_18-2.0*tmp_45*tmp_30+tmp_26*tmp_18-tmp_37*tmp_40-2.0*tmp_33*tmp_50)+2.0*((tmp_30*tmp_30)+(tmp_40*tmp_40)+(tmp_50*tmp_50)+(tmp_26*tmp_26)-tmp_26*tmp_40+tmp_50*tmp_30)*(tmp_45*tmp_26+tmp_33*tmp_40-tmp_37*tmp_30+tmp_50*tmp_18);
g(0,7) = g0_7;
}
      }
   }
}
