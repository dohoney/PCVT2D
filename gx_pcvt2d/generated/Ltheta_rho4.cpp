#include "Ltheta_rho4.h"
namespace Geex {
   Ltheta_rho4::Ltheta_rho4() : Function(1,8,0){}
   void Ltheta_rho4::eval(bool do_f, bool do_g, bool do_H) {
      if(do_f) {
{
double tmp_1 = x(7);
double tmp_2 = (tmp_1*tmp_1)+1.0;
double tmp_3 = 1.0/(tmp_2);
double tmp_4 = x(5);
double tmp_5 = x(1);
double tmp_6 = -tmp_5;
double tmp_7 = tmp_4+tmp_6;
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_7*tmp_3*tmp_9;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(4);
double tmp_13 = x(0);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_14+tmp_12;
double tmp_16 = tmp_11*tmp_3*tmp_15;
double tmp_17 = tmp_10+tmp_16;
double tmp_18 = x(3);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_5+tmp_19;
double tmp_21 = tmp_11*tmp_20*tmp_3;
double tmp_22 = x(2);
double tmp_23 = -tmp_22;
double tmp_24 = tmp_23+tmp_13;
double tmp_25 = -tmp_24*tmp_3*tmp_9;
double tmp_26 = tmp_25+tmp_21;
double tmp_28 = tmp_20*tmp_3*tmp_9;
double tmp_29 = tmp_24*tmp_11*tmp_3;
double tmp_30 = tmp_29+tmp_28;
double tmp_31 = tmp_11*tmp_7*tmp_3;
double tmp_32 = -tmp_3*tmp_9*tmp_15;
double tmp_33 = tmp_32+tmp_31;
double f0 = (tmp_30*tmp_33-tmp_17*tmp_26)*((tmp_30*tmp_30*tmp_30)*tmp_17-((tmp_30*tmp_30)*(tmp_30*tmp_30))-(tmp_30*tmp_30)*(tmp_17*tmp_17)+tmp_26*(tmp_33*tmp_33*tmp_33)-((tmp_17*tmp_17)*(tmp_17*tmp_17))-(tmp_26*tmp_26)*(tmp_33*tmp_33)+(tmp_26*tmp_26*tmp_26)*tmp_33-((tmp_26*tmp_26)*(tmp_26*tmp_26))-((tmp_33*tmp_33)*(tmp_33*tmp_33))+tmp_30*(tmp_17*tmp_17*tmp_17));
f(0) = f0;
}
      }
      if(do_g) {
{
double tmp_1 = x(7);
double tmp_2 = (tmp_1*tmp_1)+1.0;
double tmp_3 = 1.0/(tmp_2);
double tmp_4 = x(5);
double tmp_5 = x(1);
double tmp_6 = -tmp_5;
double tmp_7 = tmp_4+tmp_6;
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_7*tmp_3*tmp_9;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(4);
double tmp_13 = x(0);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_14+tmp_12;
double tmp_16 = tmp_11*tmp_3*tmp_15;
double tmp_17 = tmp_10+tmp_16;
double tmp_18 = x(3);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_19+tmp_5;
double tmp_21 = tmp_11*tmp_20*tmp_3;
double tmp_22 = x(2);
double tmp_23 = -tmp_22;
double tmp_24 = tmp_13+tmp_23;
double tmp_25 = -tmp_24*tmp_3*tmp_9;
double tmp_26 = tmp_21+tmp_25;
double tmp_28 = tmp_20*tmp_3*tmp_9;
double tmp_29 = tmp_11*tmp_24*tmp_3;
double tmp_30 = tmp_29+tmp_28;
double tmp_31 = tmp_11*tmp_7*tmp_3;
double tmp_32 = -tmp_3*tmp_9*tmp_15;
double tmp_33 = tmp_32+tmp_31;
double g0_0 = 5.0*((tmp_33*tmp_33)*tmp_26*tmp_3*tmp_9-tmp_11*(tmp_17*tmp_17)*tmp_30*tmp_3-tmp_33*(tmp_26*tmp_26)*tmp_3*tmp_9+tmp_11*tmp_17*(tmp_30*tmp_30)*tmp_3+(tmp_26*tmp_26*tmp_26)*tmp_3*tmp_9+tmp_11*(tmp_17*tmp_17*tmp_17)*tmp_3-tmp_11*(tmp_30*tmp_30*tmp_30)*tmp_3-(tmp_33*tmp_33*tmp_33)*tmp_3*tmp_9)*(tmp_30*tmp_33-tmp_17*tmp_26)-((tmp_17*tmp_17)*(tmp_30*tmp_30)+((tmp_26*tmp_26)*(tmp_26*tmp_26))-(tmp_17*tmp_17*tmp_17)*tmp_30-(tmp_33*tmp_33*tmp_33)*tmp_26+((tmp_17*tmp_17)*(tmp_17*tmp_17))+(tmp_33*tmp_33)*(tmp_26*tmp_26)+((tmp_30*tmp_30)*(tmp_30*tmp_30))+((tmp_33*tmp_33)*(tmp_33*tmp_33))-tmp_33*(tmp_26*tmp_26*tmp_26)-tmp_17*(tmp_30*tmp_30*tmp_30))*(tmp_30*tmp_3*tmp_9+tmp_11*tmp_33*tmp_3+tmp_17*tmp_3*tmp_9+tmp_11*tmp_26*tmp_3);
g(0,0) = g0_0;
}
{
double tmp_1 = x(7);
double tmp_2 = (tmp_1*tmp_1)+1.0;
double tmp_3 = 1.0/(tmp_2);
double tmp_4 = x(5);
double tmp_5 = x(1);
double tmp_6 = -tmp_5;
double tmp_7 = tmp_4+tmp_6;
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_7*tmp_3*tmp_9;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(4);
double tmp_13 = x(0);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_14+tmp_12;
double tmp_16 = tmp_11*tmp_3*tmp_15;
double tmp_17 = tmp_10+tmp_16;
double tmp_18 = x(3);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_19+tmp_5;
double tmp_21 = tmp_11*tmp_20*tmp_3;
double tmp_22 = x(2);
double tmp_23 = -tmp_22;
double tmp_24 = tmp_13+tmp_23;
double tmp_25 = -tmp_24*tmp_3*tmp_9;
double tmp_26 = tmp_21+tmp_25;
double tmp_28 = tmp_20*tmp_3*tmp_9;
double tmp_29 = tmp_11*tmp_24*tmp_3;
double tmp_30 = tmp_29+tmp_28;
double tmp_31 = tmp_11*tmp_7*tmp_3;
double tmp_32 = -tmp_3*tmp_9*tmp_15;
double tmp_33 = tmp_32+tmp_31;
double g0_1 = 5.0*(tmp_11*tmp_3*(tmp_26*tmp_26*tmp_26)-(tmp_17*tmp_17*tmp_17)*tmp_3*tmp_9-tmp_11*tmp_33*tmp_3*(tmp_26*tmp_26)+(tmp_30*tmp_30*tmp_30)*tmp_3*tmp_9-tmp_17*(tmp_30*tmp_30)*tmp_3*tmp_9-tmp_11*(tmp_33*tmp_33*tmp_33)*tmp_3+(tmp_17*tmp_17)*tmp_30*tmp_3*tmp_9+tmp_11*(tmp_33*tmp_33)*tmp_3*tmp_26)*(tmp_17*tmp_26-tmp_30*tmp_33)+(tmp_3*tmp_26*tmp_9+tmp_33*tmp_3*tmp_9-tmp_11*tmp_30*tmp_3-tmp_11*tmp_17*tmp_3)*(tmp_17*(tmp_30*tmp_30*tmp_30)-((tmp_26*tmp_26)*(tmp_26*tmp_26))-((tmp_17*tmp_17)*(tmp_17*tmp_17))+(tmp_33*tmp_33*tmp_33)*tmp_26-(tmp_33*tmp_33)*(tmp_26*tmp_26)-((tmp_30*tmp_30)*(tmp_30*tmp_30))-((tmp_33*tmp_33)*(tmp_33*tmp_33))+tmp_33*(tmp_26*tmp_26*tmp_26)-(tmp_17*tmp_17)*(tmp_30*tmp_30)+(tmp_17*tmp_17*tmp_17)*tmp_30);
g(0,1) = g0_1;
}
{
double tmp_1 = x(7);
double tmp_2 = (tmp_1*tmp_1)+1.0;
double tmp_3 = 1.0/(tmp_2);
double tmp_4 = x(5);
double tmp_5 = x(1);
double tmp_6 = -tmp_5;
double tmp_7 = tmp_4+tmp_6;
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_7*tmp_3*tmp_9;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(4);
double tmp_13 = x(0);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_14+tmp_12;
double tmp_16 = tmp_11*tmp_3*tmp_15;
double tmp_17 = tmp_10+tmp_16;
double tmp_19 = tmp_11*tmp_7*tmp_3;
double tmp_20 = -tmp_3*tmp_9*tmp_15;
double tmp_21 = tmp_20+tmp_19;
double tmp_24 = x(3);
double tmp_25 = -tmp_24;
double tmp_26 = tmp_25+tmp_5;
double tmp_27 = tmp_26*tmp_3*tmp_9;
double tmp_28 = x(2);
double tmp_29 = -tmp_28;
double tmp_30 = tmp_13+tmp_29;
double tmp_31 = tmp_11*tmp_30*tmp_3;
double tmp_32 = tmp_31+tmp_27;
double tmp_35 = tmp_11*tmp_26*tmp_3;
double tmp_36 = -tmp_30*tmp_3*tmp_9;
double tmp_37 = tmp_36+tmp_35;
double g0_2 = (tmp_21*tmp_32-tmp_37*tmp_17)*(2.0*tmp_11*(tmp_17*tmp_17)*tmp_3*tmp_32+(tmp_21*tmp_21*tmp_21)*tmp_3*tmp_9-tmp_11*(tmp_17*tmp_17*tmp_17)*tmp_3+3.0*(tmp_37*tmp_37)*tmp_21*tmp_3*tmp_9-3.0*tmp_11*tmp_17*tmp_3*(tmp_32*tmp_32)-2.0*tmp_37*(tmp_21*tmp_21)*tmp_3*tmp_9+4.0*tmp_11*tmp_3*(tmp_32*tmp_32*tmp_32)-4.0*(tmp_37*tmp_37*tmp_37)*tmp_3*tmp_9)+((tmp_37*tmp_37)*(tmp_21*tmp_21)-(tmp_37*tmp_37*tmp_37)*tmp_21+((tmp_37*tmp_37)*(tmp_37*tmp_37))+((tmp_21*tmp_21)*(tmp_21*tmp_21))+((tmp_32*tmp_32)*(tmp_32*tmp_32))-tmp_17*(tmp_32*tmp_32*tmp_32)+((tmp_17*tmp_17)*(tmp_17*tmp_17))-(tmp_17*tmp_17*tmp_17)*tmp_32+(tmp_17*tmp_17)*(tmp_32*tmp_32)-tmp_37*(tmp_21*tmp_21*tmp_21))*(tmp_17*tmp_3*tmp_9+tmp_11*tmp_21*tmp_3);
g(0,2) = g0_2;
}
{
double tmp_1 = x(7);
double tmp_2 = (tmp_1*tmp_1)+1.0;
double tmp_3 = 1.0/(tmp_2);
double tmp_4 = x(5);
double tmp_5 = x(1);
double tmp_6 = -tmp_5;
double tmp_7 = tmp_4+tmp_6;
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_7*tmp_3*tmp_9;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(4);
double tmp_13 = x(0);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_14+tmp_12;
double tmp_16 = tmp_3*tmp_15*tmp_11;
double tmp_17 = tmp_10+tmp_16;
double tmp_19 = x(3);
double tmp_20 = -tmp_19;
double tmp_21 = tmp_20+tmp_5;
double tmp_22 = tmp_3*tmp_21*tmp_11;
double tmp_23 = x(2);
double tmp_24 = -tmp_23;
double tmp_25 = tmp_24+tmp_13;
double tmp_26 = -tmp_3*tmp_9*tmp_25;
double tmp_27 = tmp_26+tmp_22;
double tmp_29 = tmp_3*tmp_9*tmp_21;
double tmp_30 = tmp_3*tmp_25*tmp_11;
double tmp_31 = tmp_30+tmp_29;
double tmp_33 = tmp_7*tmp_3*tmp_11;
double tmp_34 = -tmp_3*tmp_9*tmp_15;
double tmp_35 = tmp_33+tmp_34;
double g0_3 = -(((tmp_17*tmp_17)*(tmp_17*tmp_17))+((tmp_27*tmp_27)*(tmp_27*tmp_27))+((tmp_35*tmp_35)*(tmp_35*tmp_35))-(tmp_27*tmp_27*tmp_27)*tmp_35+(tmp_27*tmp_27)*(tmp_35*tmp_35)-tmp_17*(tmp_31*tmp_31*tmp_31)-(tmp_17*tmp_17*tmp_17)*tmp_31+((tmp_31*tmp_31)*(tmp_31*tmp_31))-tmp_27*(tmp_35*tmp_35*tmp_35)+(tmp_17*tmp_17)*(tmp_31*tmp_31))*(tmp_17*tmp_3*tmp_11-tmp_3*tmp_9*tmp_35)+(tmp_35*tmp_31-tmp_17*tmp_27)*(4.0*tmp_3*tmp_9*(tmp_31*tmp_31*tmp_31)-3.0*tmp_17*tmp_3*tmp_9*(tmp_31*tmp_31)-(tmp_17*tmp_17*tmp_17)*tmp_3*tmp_9-tmp_3*(tmp_35*tmp_35*tmp_35)*tmp_11-3.0*(tmp_27*tmp_27)*tmp_3*tmp_35*tmp_11+4.0*(tmp_27*tmp_27*tmp_27)*tmp_3*tmp_11+2.0*tmp_27*tmp_3*(tmp_35*tmp_35)*tmp_11+2.0*(tmp_17*tmp_17)*tmp_3*tmp_9*tmp_31);
g(0,3) = g0_3;
}
{
double tmp_1 = x(1);
double tmp_2 = x(3);
double tmp_3 = -tmp_2;
double tmp_4 = tmp_3+tmp_1;
double tmp_5 = x(7);
double tmp_6 = (tmp_5*tmp_5)+1.0;
double tmp_7 = 1.0/(tmp_6);
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_9*tmp_4*tmp_7;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(0);
double tmp_13 = x(2);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_12+tmp_14;
double tmp_16 = tmp_15*tmp_11*tmp_7;
double tmp_17 = tmp_16+tmp_10;
double tmp_19 = tmp_11*tmp_4*tmp_7;
double tmp_20 = -tmp_9*tmp_15*tmp_7;
double tmp_21 = tmp_19+tmp_20;
double tmp_24 = x(5);
double tmp_25 = -tmp_1;
double tmp_26 = tmp_25+tmp_24;
double tmp_27 = tmp_26*tmp_9*tmp_7;
double tmp_28 = x(4);
double tmp_29 = -tmp_12;
double tmp_30 = tmp_29+tmp_28;
double tmp_31 = tmp_11*tmp_30*tmp_7;
double tmp_32 = tmp_31+tmp_27;
double tmp_35 = tmp_26*tmp_11*tmp_7;
double tmp_36 = -tmp_9*tmp_30*tmp_7;
double tmp_37 = tmp_35+tmp_36;
double g0_4 = (tmp_21*tmp_11*tmp_7+tmp_9*tmp_17*tmp_7)*(((tmp_21*tmp_21)*(tmp_21*tmp_21))+((tmp_37*tmp_37)*(tmp_37*tmp_37))-tmp_32*(tmp_17*tmp_17*tmp_17)-(tmp_21*tmp_21*tmp_21)*tmp_37+(tmp_21*tmp_21)*(tmp_37*tmp_37)+((tmp_17*tmp_17)*(tmp_17*tmp_17))+(tmp_32*tmp_32)*(tmp_17*tmp_17)+((tmp_32*tmp_32)*(tmp_32*tmp_32))-(tmp_32*tmp_32*tmp_32)*tmp_17-tmp_21*(tmp_37*tmp_37*tmp_37))+(4.0*tmp_9*(tmp_37*tmp_37*tmp_37)*tmp_7+3.0*(tmp_32*tmp_32)*tmp_11*tmp_17*tmp_7-4.0*(tmp_32*tmp_32*tmp_32)*tmp_11*tmp_7-2.0*tmp_32*tmp_11*(tmp_17*tmp_17)*tmp_7-3.0*tmp_9*tmp_21*(tmp_37*tmp_37)*tmp_7+tmp_11*(tmp_17*tmp_17*tmp_17)*tmp_7+2.0*tmp_9*(tmp_21*tmp_21)*tmp_37*tmp_7-tmp_9*(tmp_21*tmp_21*tmp_21)*tmp_7)*(tmp_37*tmp_17-tmp_32*tmp_21);
g(0,4) = g0_4;
}
{
double tmp_1 = x(7);
double tmp_2 = (tmp_1*tmp_1)+1.0;
double tmp_3 = 1.0/(tmp_2);
double tmp_4 = x(5);
double tmp_5 = x(1);
double tmp_6 = -tmp_5;
double tmp_7 = tmp_4+tmp_6;
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_7*tmp_3*tmp_9;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(4);
double tmp_13 = x(0);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_12+tmp_14;
double tmp_16 = tmp_15*tmp_11*tmp_3;
double tmp_17 = tmp_10+tmp_16;
double tmp_18 = x(3);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_5+tmp_19;
double tmp_21 = tmp_11*tmp_20*tmp_3;
double tmp_22 = x(2);
double tmp_23 = -tmp_22;
double tmp_24 = tmp_23+tmp_13;
double tmp_25 = -tmp_24*tmp_3*tmp_9;
double tmp_26 = tmp_21+tmp_25;
double tmp_28 = tmp_20*tmp_3*tmp_9;
double tmp_29 = tmp_24*tmp_11*tmp_3;
double tmp_30 = tmp_29+tmp_28;
double tmp_31 = tmp_11*tmp_7*tmp_3;
double tmp_32 = -tmp_15*tmp_3*tmp_9;
double tmp_33 = tmp_31+tmp_32;
double g0_5 = (((tmp_33*tmp_33)*(tmp_33*tmp_33))+((tmp_26*tmp_26)*(tmp_26*tmp_26))+(tmp_17*tmp_17)*(tmp_30*tmp_30)+(tmp_26*tmp_26)*(tmp_33*tmp_33)-(tmp_17*tmp_17*tmp_17)*tmp_30-(tmp_26*tmp_26*tmp_26)*tmp_33-tmp_26*(tmp_33*tmp_33*tmp_33)-tmp_17*(tmp_30*tmp_30*tmp_30)+((tmp_17*tmp_17)*(tmp_17*tmp_17))+((tmp_30*tmp_30)*(tmp_30*tmp_30)))*(tmp_26*tmp_3*tmp_9-tmp_11*tmp_30*tmp_3)+(tmp_17*tmp_26-tmp_30*tmp_33)*(2.0*tmp_11*(tmp_26*tmp_26)*tmp_33*tmp_3-3.0*tmp_11*tmp_26*(tmp_33*tmp_33)*tmp_3-3.0*(tmp_17*tmp_17)*tmp_30*tmp_3*tmp_9-(tmp_30*tmp_30*tmp_30)*tmp_3*tmp_9+2.0*tmp_17*(tmp_30*tmp_30)*tmp_3*tmp_9+4.0*(tmp_17*tmp_17*tmp_17)*tmp_3*tmp_9-tmp_11*(tmp_26*tmp_26*tmp_26)*tmp_3+4.0*tmp_11*(tmp_33*tmp_33*tmp_33)*tmp_3);
g(0,5) = g0_5;
}
{
double tmp_1 = x(6);
double tmp_2 = sin(tmp_1);
double tmp_3 = x(1);
double tmp_4 = x(3);
double tmp_5 = -tmp_4;
double tmp_6 = tmp_3+tmp_5;
double tmp_7 = x(7);
double tmp_8 = (tmp_7*tmp_7)+1.0;
double tmp_9 = 1.0/(tmp_8);
double tmp_10 = tmp_6*tmp_9*tmp_2;
double tmp_11 = x(0);
double tmp_12 = x(2);
double tmp_13 = -tmp_12;
double tmp_14 = tmp_11+tmp_13;
double tmp_15 = cos(tmp_1);
double tmp_16 = -tmp_14*tmp_9*tmp_15;
double tmp_17 = tmp_10+tmp_16;
double tmp_18 = tmp_6*tmp_9*tmp_15;
double tmp_19 = tmp_14*tmp_9*tmp_2;
double tmp_20 = tmp_19+tmp_18;
double tmp_22 = x(5);
double tmp_23 = -tmp_3;
double tmp_24 = tmp_23+tmp_22;
double tmp_25 = tmp_9*tmp_2*tmp_24;
double tmp_26 = x(4);
double tmp_27 = -tmp_11;
double tmp_28 = tmp_26+tmp_27;
double tmp_29 = -tmp_9*tmp_28*tmp_15;
double tmp_30 = tmp_29+tmp_25;
double tmp_32 = tmp_9*tmp_15*tmp_24;
double tmp_33 = tmp_9*tmp_28*tmp_2;
double tmp_34 = tmp_33+tmp_32;
double g0_6 = (3.0*tmp_30*tmp_20*(tmp_34*tmp_34)-4.0*tmp_30*(tmp_34*tmp_34*tmp_34)+3.0*tmp_17*(tmp_20*tmp_20)*tmp_34+4.0*(tmp_17*tmp_17*tmp_17)*tmp_20-3.0*(tmp_30*tmp_30)*tmp_17*tmp_34+2.0*tmp_30*(tmp_17*tmp_17)*tmp_34+tmp_17*(tmp_34*tmp_34*tmp_34)-(tmp_30*tmp_30*tmp_30)*tmp_20-(tmp_17*tmp_17*tmp_17)*tmp_34+tmp_30*(tmp_20*tmp_20*tmp_20)-2.0*tmp_30*(tmp_20*tmp_20)*tmp_34-2.0*tmp_17*tmp_20*(tmp_34*tmp_34)+4.0*(tmp_30*tmp_30*tmp_30)*tmp_34-3.0*tmp_30*(tmp_17*tmp_17)*tmp_20-4.0*tmp_17*(tmp_20*tmp_20*tmp_20)+2.0*(tmp_30*tmp_30)*tmp_17*tmp_20)*(tmp_17*tmp_34-tmp_30*tmp_20);
g(0,6) = g0_6;
}
{
double tmp_1 = x(7);
double tmp_2 = (tmp_1*tmp_1)+1.0;
double tmp_3 = 1.0/(tmp_2);
double tmp_4 = x(5);
double tmp_5 = x(1);
double tmp_6 = -tmp_5;
double tmp_7 = tmp_6+tmp_4;
double tmp_8 = x(6);
double tmp_9 = cos(tmp_8);
double tmp_10 = tmp_9*tmp_7*tmp_3;
double tmp_11 = sin(tmp_8);
double tmp_12 = x(4);
double tmp_13 = x(0);
double tmp_14 = -tmp_13;
double tmp_15 = tmp_12+tmp_14;
double tmp_16 = tmp_15*tmp_11*tmp_3;
double tmp_17 = tmp_16+tmp_10;
double tmp_18 = x(3);
double tmp_19 = -tmp_18;
double tmp_20 = tmp_5+tmp_19;
double tmp_21 = tmp_9*tmp_20*tmp_3;
double tmp_22 = x(2);
double tmp_23 = -tmp_22;
double tmp_24 = tmp_23+tmp_13;
double tmp_25 = tmp_24*tmp_11*tmp_3;
double tmp_26 = tmp_21+tmp_25;
double tmp_29 = tmp_11*tmp_20*tmp_3;
double tmp_30 = -tmp_9*tmp_24*tmp_3;
double tmp_31 = tmp_30+tmp_29;
double tmp_32 = tmp_11*tmp_7*tmp_3;
double tmp_33 = -tmp_15*tmp_9*tmp_3;
double tmp_34 = tmp_33+tmp_32;
double tmp_44 = (tmp_3*tmp_3);
double tmp_45 = tmp_44*tmp_24*tmp_11*tmp_1;
double tmp_46 = tmp_9*tmp_44*tmp_20*tmp_1;
double tmp_47 = tmp_46+tmp_45;
double tmp_49 = tmp_44*tmp_11*tmp_1*tmp_7;
double tmp_50 = -tmp_15*tmp_9*tmp_44*tmp_1;
double tmp_51 = tmp_50+tmp_49;
double tmp_53 = tmp_9*tmp_44*tmp_24*tmp_1;
double tmp_54 = -tmp_44*tmp_11*tmp_20*tmp_1;
double tmp_55 = tmp_54+tmp_53;
double tmp_57 = tmp_15*tmp_44*tmp_11*tmp_1;
double tmp_58 = tmp_9*tmp_44*tmp_1*tmp_7;
double tmp_59 = tmp_57+tmp_58;
double g0_7 = 2.0*((tmp_31*tmp_31*tmp_31)*tmp_34-((tmp_17*tmp_17)*(tmp_17*tmp_17))-(tmp_31*tmp_31)*(tmp_34*tmp_34)-((tmp_31*tmp_31)*(tmp_31*tmp_31))-((tmp_34*tmp_34)*(tmp_34*tmp_34))-((tmp_26*tmp_26)*(tmp_26*tmp_26))+(tmp_17*tmp_17*tmp_17)*tmp_26-(tmp_17*tmp_17)*(tmp_26*tmp_26)+tmp_17*(tmp_26*tmp_26*tmp_26)+tmp_31*(tmp_34*tmp_34*tmp_34))*(tmp_31*tmp_59-tmp_34*tmp_47-tmp_17*tmp_55-tmp_26*tmp_51)-2.0*(tmp_47*(tmp_17*tmp_17*tmp_17)+tmp_59*(tmp_26*tmp_26*tmp_26)+4.0*(tmp_31*tmp_31*tmp_31)*tmp_55-2.0*tmp_59*tmp_17*(tmp_26*tmp_26)-2.0*tmp_47*(tmp_17*tmp_17)*tmp_26+3.0*tmp_31*(tmp_34*tmp_34)*tmp_51-4.0*tmp_59*(tmp_17*tmp_17*tmp_17)-4.0*tmp_47*(tmp_26*tmp_26*tmp_26)-2.0*(tmp_31*tmp_31)*tmp_34*tmp_51-4.0*(tmp_34*tmp_34*tmp_34)*tmp_51+(tmp_31*tmp_31*tmp_31)*tmp_51+3.0*tmp_47*tmp_17*(tmp_26*tmp_26)+3.0*tmp_59*(tmp_17*tmp_17)*tmp_26+2.0*tmp_31*(tmp_34*tmp_34)*tmp_55-(tmp_34*tmp_34*tmp_34)*tmp_55-3.0*(tmp_31*tmp_31)*tmp_34*tmp_55)*(tmp_34*tmp_26-tmp_31*tmp_17);
g(0,7) = g0_7;
}
      }
   }
}
