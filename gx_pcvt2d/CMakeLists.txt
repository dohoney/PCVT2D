
IF(WIN32)
	# Od : no optimisation; Ot: favor code speed over code size.
	if(DO_NOT_OPTIMIZE_WINDOWS_RELEASE)
		SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Od /Ot")
	endif(DO_NOT_OPTIMIZE_WINDOWS_RELEASE)
ELSE(WIN32)
	# CGAL needs rounding math to compile well with GCC
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -frounding-math")
ENDIF(WIN32)

AUX_SOURCE_DIRECTORY(. SUB_SOURCES)
AUX_SOURCE_DIRECTORY(generated SOURCES)
#AUX_SOURCE_DIRECTORY(PDSample SOURCES)
#AUX_SOURCE_DIRECTORY(FastPoisson SOURCES)
#AUX_SOURCE_DIRECTORY(psa-src SOURCES)
#AUX_SOURCE_DIRECTORY(ccvt SOURCES)
SET(SOURCES ${SOURCES} ${SUB_SOURCES})
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/gx_pcvt2d)
file(GLOB HeaderFiles *.h)

IF (WIN32)
   INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/glut-win32/include)
   LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/glut-win32/lib)
   INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/Geex/third_party/fftw3-win32/)
   LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/Geex/third_party/fftw3-win32)
   INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/Geex/third_party/cairo-win32/include)
   LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/Geex/third_party/cairo-win32/lib)
   ADD_EXECUTABLE(gx_pcvt2d ${SOURCES} ${HeaderFiles})
ELSE (WIN32)
   LINK_DIRECTORIES(${CGAL_DIR}/lib/)
   LINK_DIRECTORIES(/usr/X11R6/lib)
   ADD_EXECUTABLE(gx_pcvt2d ${SOURCES} ${HeaderFiles})
ENDIF (WIN32)

ADD_DEPENDENCIES(gx_pcvt2d geex)

ADD_DEFINITIONS(-DNOMINMAX) 
#ADD_DEFINITIONS(-D_OPENMP)  #crashes


IF (WIN32)
   #TARGET_LINK_LIBRARIES(gx_pcvt2d geex opengl32 glu32 libfftw3-3 cairo)
   TARGET_LINK_LIBRARIES(gx_pcvt2d geex opengl32 glu32)
	SET_TARGET_PROPERTIES(geex PROPERTIES LINK_FLAGS "/INCREMENTAL /LARGEADDRESSAWARE")
	SET_TARGET_PROPERTIES(gx_pcvt2d PROPERTIES LINK_FLAGS "/LARGEADDRESSAWARE")
  # SET_TARGET_PROPERTIES(gx_pcvt2d PROPERTIES LINK_FLAGS "/FORCE:MULTIPLE")
ELSE (WIN32)
   TARGET_LINK_LIBRARIES(gx_pcvt2d geex glut GL GLU CGAL)
ENDIF (WIN32)

